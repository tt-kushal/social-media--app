continue
object.sender.profile.username
continue
receiver = User.find_by(id: message_params[:receiver_id])
receiver
continue
authorized_user_to_comment?(post)
n
profile.public_profile? || current_user_follows || profile_owner
continue
authorized_user_to_comment?(post)
n
profile.public_profile? || current_user_follows || profile_owner
profile.public_profile?
profile_owner
current_user_follows
profile
continue
profile_owner
current_user_follows
profile.public_profile?
current_user
profile.user
continue
false || false
false || true
current_user_follows
profile.private_profile?
profile
continue
profile.user
current_user
continue
profile.privacy_status == 0
continue
profile.privacy_status == 0
continue
profile.privacy_status == "private_profile"
profile.privacy_status == 1
profile.privacy_status
continue
profile.privacy_status == 0
profile.privacy_status == public_profile
continue
current_user_follows
n
continue
profile.user
current_user
current_user_follows
n
continue
profile.user
current_user
current_user_follows
current_user_follows = current_user.accepted_followings.exists?(profile.user.id)
continue
current_user.accepted_followings.exists?(profile.user.id)
following_exists = current_user.accepted_followings.exists?(following_id: profile.user.id)
current_user.accepted_followings.exists?(followings: { following_id: profile.user.id })
following_exists = current_user.accepted_followings.exists?(following_id: profile.user.id)
current_user.accepted_followings.where(following_id: profile.user)
current_user.accepted_followings.exists?(following_id: profile.user)
current_user.accepted_followings.where(following_id: profile.user)
continue
object.user.accepted_followers.count
continue
object.accepted_followers.count
object.user
continue
object
continue
profile.public_profile?
continue
profile
follow_request = current_user.followers.where(status: :pending)
continue
current_user.pending_followers.first
continue
 follow_request
profile = Profile.find(params[:profile_id])
continue
follow_request = profile.user.followers.build(follower_id: current_user.id, following_id: profile.user_id, status: :pending)
current_user.id
profile.user_id
continue
Profile.find(2)
profile.user_id
current_user.id
follow_request = current_user.followers.build(follower_id: current_user.id, following_id: profile.user_id, status: :pending)
profile = Profile.find(params[:profile_id])
continue
profile.user_id
current_user.id
follow_request = current_user.followers.build(following_id: profile.user_id, status: :pending)
profile = Profile.find(params[:profile_id])
continue
profile.user_id
current_user.id
profile.user_id
current_user.email
continue
follow_request
follow_request = current_user.followers.build(following_id: profile.user_id, status: :pending)
profile
current_user
continue
current_user
profile
continue
profile.privacy_status == 1
continue
profile = check_profile_existence(current_user)
profile
check_profile_existence(current_user)
continue
current_user.profile.present?
current_user
continue
current_user.profile.present?
continue
current_user.profile.present?
continue
current_user.profile.present?
current_user
continue
current_user.profile.present?
continue
n
Profile.count
current_user.profile
continue
profile
continue
current_user.profile.present?
continue
like.present?
like = current_user.likes.find_by(post: @post)
@post = Post.find(post_id)
post_id = params[:post_id]
continue
like.present?
like = @posts.likes
@post = Post.find(params[:id])
like.present?
like
likes
like = @posts.likes
@post.likes
like = @posts.likes.find_by(user_id: current_user.id)
@post = Post.find(params[:id])
continue
like = @posts.likes.find_by(user_id: current_user.id)
 @post = Post.find(params[:id])
continue
n
like
@post
Post.find(params[:id])
params[:id]
continue
@posts.find_by(user_id: current_user.id)
@posts
continue
comment.user == current_user || comment.post.user == current_user
comment.user == current_user
comment.post.user == current_user
comment
continue
false || false
comment.post.user == current_user
comment.user == current_user
continue
authorized_user?(comment)
n
comment.user
continue
comment.user
comment.user == current_user || comment.post.user == current_user
comment.post.user == current_user
comment.user == current_user
comment
continue
comment
continue
comment.user == current_user
if comment.user == current_user
comment.user
current_user
comment
continue
comment
continue
comment
n
user_id = current_user.id
comment
continue
comment.post
comment.user
comment
continue
comment
c
comment
ccmment
continue
admin_users.sign_in_count
continue
post.profile.user == current_user
continue
post.profile.user == current_user
current_user
post.profile.user
post
continue
current_user
continue
post.media.count
continue
post.media.attached?
continue
post.media.file_name
continue
post.media.count
continue
@post = profile.posts.new(post_params)
continue
 @profile
@profile = Profile.new(profile_params)
current_user
continue
@profile = Profile.new(profile_params)
continue
@profile
profile_params
continue
@profile
@profile.save
@profile = Profile.new(profile_params)
profile
current_user.id
continue
User.exists?(k01@example.com)
resource.email
resource.email.present?
continue
resource.persisted?
resource.save
resource
